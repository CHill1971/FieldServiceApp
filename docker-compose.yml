version: "3.9"

services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-field_service}
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 10

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data

  api:
    build:
      context: ./apps/api
    environment:
      NODE_ENV: development
      PORT: ${API_PORT:-4000}
      JWT_SECRET: ${JWT_SECRET:-devsecret}
      DATABASE_URL: ${DATABASE_URL:-postgresql://postgres:postgres@db:5432/field_service?schema=public}
      S3_ENDPOINT: ${S3_ENDPOINT:-http://minio:9000}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY:-minioadmin}
      S3_SECRET_KEY: ${S3_SECRET_KEY:-minioadmin}
      S3_BUCKET: ${S3_BUCKET:-attachments}
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_started
    ports:
      - "4000:4000"
    volumes:
      - ./apps/api:/app
      - /app/node_modules
    command: npm run dev

  # web and nginx will be added later
  # web:
  #   build:
  #     context: ./apps/web
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     NODE_ENV: development

volumes:
  db-data:
  minio-data: